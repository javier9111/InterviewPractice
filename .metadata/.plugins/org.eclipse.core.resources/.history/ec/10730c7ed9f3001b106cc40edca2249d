package LeetCodeExc.medium;

public class ContainerMostWater {

	
	/***
	 * Given n non-negative integers a1, a2, ..., an , where each represents a point at coordinate (i, ai). n vertical lines are drawn 
	 * such that the two endpoints of the line i is at (i, ai) and (i, 0). Find two lines, which, together with the x-axis forms a container, 
	 * such that the container contains the most water.
	 * @param args
	 */
	
	static void main(String[] args)
	{
		
		
	}
	
	
	
	/**
	 * This method will return the max area cover by the given array
	 * @param height
	 * @return
	 */
public int maxArea(int[] height) {
        
	int maxarea =0, tempmaxArea =0;
	
		//we can sum this method by saying that 
	 for(int i=0; i<height.length; i++)
	 {
		 for(int j=i+1; j<height.length; j++)
		 {
			 if(height[i]>= height[j])
			 {
				 tempmaxArea = height[j]*j;
				 
				 if(tempmaxArea> maxarea)
				 {
					 maxarea = tempmaxArea;
				 }
				 
			 }else if(height[i]<= height[j]){
				 tempmaxArea = height[i]*j;
				 
				 if(tempmaxArea> maxarea)
				 {
					 maxarea = tempmaxArea;
				 }
			 }
		 }
	 }
	return maxarea;
    }
}
