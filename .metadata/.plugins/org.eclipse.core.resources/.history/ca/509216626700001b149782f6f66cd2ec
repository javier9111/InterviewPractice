/**
 * 
 */
package com.java.test.hackerRank;

/**
 * @author ringo
 *
 *Emma is playing a new mobile game that starts with consecutively numbered clouds. Some of the clouds are thunderheads and others are cumulus. She can jump on any cumulus cloud 
 *having a number that is equal to the number of the current
 * cloud plus 1 or 2 . She must avoid the thunderheads. Determine the minimum number of jumps it will take Emma to 
 * jump from her starting postion to the last cloud. It is always possible to win the game.
 *
 *	For each game, Emma will get an array of clouds numbered  if they are safe or  if they must be avoided. For example, C= [0,1,0,0,0,1,0] 
 *	indexed from [0...6]. The number on each cloud is its index in the list so she must avoid the clouds at indexes  and . She 
 *	could follow the following two paths: 0 -> 2 ->4->6  or 0->2->3->4->6 . The first path 3 takes  jumps while the second takes 4 .
 *
 *
 *
 */
public class JumpingontheClouds {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		int[] c = {0,1,0,0,0,1,0};
		
		System.out.println(jumpingOnClouds(c));
		
	}
	
    static int jumpingOnClouds(int[] c) {

    	int jump =0;
    	for(int i =0 ; i<c.length; i++)
    	{
    		System.out.println( "counter antes :"+i +" posicion :"+c[i]);
    		if( !(i+2 > c.length) && c[i+2] != 1 )
    		{
    			
    			i ++;
    		}
    		System.out.println( "counter despues :"+i+" posicion :"+c[i]);
    		jump+=1;

    	}
    	return jump;
    }


}
