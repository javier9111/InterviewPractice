package CrackingCodeInterview.LinkedLists;

import CrackingCodeInterview.LinkedLists.common.Node;
import CrackingCodeInterview.LinkedLists.common.Utils;

/***
 * 
 * 
 * return the kth to the last node of the single linked list
 * @author ringo
 *
 */
public class ReturnKthLast {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Node n1 = new Node(1);
		Node n2 = new Node(2);
		Node n3 = new Node(3);
		Node n4 = new Node(4);
		Node n5 = new Node(5);
		Node n6 = new Node(6);
		Node n7 = new Node(7);
		Node n8 = new Node(8);
		Node n9 = new Node(9);
		
		
		n1.next = n2;
		n2.next = n3;
		n3.next = n4;
		n4.next = n5;
		n5.next = n6;
		n6.next = n7;
		n7.next = n8;
		n8.next = n9;
		n9.next = null;
		
		
		
		Node result = returnKthNodeToLast(n1, 2);
		
		
		Utils.printNodes(result);
		
		
		
	}

	
	
	
	public static Node returnKthNodeToLast(Node head, int k){
		
		int counter = 1;
	
		while(counter<k-1){
				head.next = head.next.next;
			counter++;
		}
		
//		if(k>1){
//			head = head.next;
//		}
		
		return head;
	}
}
